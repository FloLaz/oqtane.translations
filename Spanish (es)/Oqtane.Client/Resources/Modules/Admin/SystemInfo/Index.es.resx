<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Access.ApiFramework" xml:space="preserve">
    <value>Acceder a la API de Swagger</value>
  </data>
  <data name="FrameworkVersion.HelpText" xml:space="preserve">
    <value>Versión del Framework</value>
  </data>
  <data name="CLRVersion.HelpText" xml:space="preserve">
    <value>Versión del Common Language Runtime</value>
  </data>
  <data name="OSVersion.HelpText" xml:space="preserve">
    <value>Versión del sistema operativo</value>
  </data>
  <data name="ContentRootPath.HelpText" xml:space="preserve">
    <value>Ruta del servidor</value>
  </data>
  <data name="ServerTime.HelpText" xml:space="preserve">
    <value>Hora del servidor</value>
  </data>
  <data name="FrameworkVersion.Text" xml:space="preserve">
    <value>Versión del Framework: </value>
  </data>
  <data name="CLRVersion.Text" xml:space="preserve">
    <value>Versión del CLR: </value>
  </data>
  <data name="OSVersion.Text" xml:space="preserve">
    <value>Versión del OS: </value>
  </data>
  <data name="ContentRootPath.Text" xml:space="preserve">
    <value>Ruta del servidor:</value>
  </data>
  <data name="ServerTime.Text" xml:space="preserve">
    <value>Hora del servidor:</value>
  </data>
  <data name="RestartApplication.Header" xml:space="preserve">
    <value>Reiniciar aplicación</value>
  </data>
  <data name="RestartApplication.Message" xml:space="preserve">
    <value>¿Seguro que deseas reiniciar la aplicación?</value>
  </data>
  <data name="Error.UpdateConfig" xml:space="preserve">
    <value>Ocurrió un error actualizando la configuración</value>
  </data>
  <data name="Success.UpdateConfig.Restart" xml:space="preserve">
    <value>Configuración actualizada. Por favor seleccione reiniciar la aplicación para que se apliquen los cambios</value>
  </data>
  <data name="InstallationId.Text" xml:space="preserve">
    <value>ID de instalación: </value>
  </data>
  <data name="InstallationId.HelpText" xml:space="preserve">
    <value>El identificador de su instalación</value>
  </data>
  <data name="DetailedErrors.Text" xml:space="preserve">
    <value>¿Errores detallados? </value>
  </data>
  <data name="DetailedErrors.HelpText" xml:space="preserve">
    <value>Especifique si los errores detallados estan habilitados para Blazor. Esta opcion no debe estar activa en ambientes productivos</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>Verdadero</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>Falso</value>
  </data>
  <data name="LoggingLevel.Text" xml:space="preserve">
    <value>Nivel de registro: </value>
  </data>
  <data name="LoggingLevel.HelpText" xml:space="preserve">
    <value>El nivel de registro minimo para el log de registro. Esta opcion permite controlar el volumne de items guardados en tu registro de eventos</value>
  </data>
  <data name="Trace" xml:space="preserve">
    <value>Rastro</value>
  </data>
  <data name="Debug" xml:space="preserve">
    <value>Depurar</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Información</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Advertencia</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Critical" xml:space="preserve">
    <value>Critico</value>
  </data>
  <data name="Info.Heading" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="Options.Heading" xml:space="preserve">
    <value>Optiones</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Por favor registrame para recibir notificaciones de actualizaciones importantes y de seguridad</value>
  </data>
  <data name="Success.Register" xml:space="preserve">
    <value>Fuiste registrado con éxito para recibir actualizaciones</value>
  </data>
  <data name="PackageService.HelpText" xml:space="preserve">
    <value>Especifique si el servicio de paquetes esta activo para instalar módulos, temas y traducciones</value>
  </data>
  <data name="PackageService.Text" xml:space="preserve">
    <value>¿Servicio de paquetes activo?</value>
  </data>
  <data name="Swagger.HelpText" xml:space="preserve">
    <value>Especifique si Swagger esta activo para la API</value>
  </data>
  <data name="Swagger.Text" xml:space="preserve">
    <value>¿Swagger activo?</value>
  </data>
  <data name="RestartApplication.Text" xml:space="preserve">
    <value>Reiniciar aplicación</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Ninguno</value>
  </data>
  <data name="NotificationLevel.HelpText" xml:space="preserve">
    <value>El mínimo nivel de registro donde las notificaciones deben ser enviadas al usuario anfitrión.</value>
  </data>
  <data name="NotificationLevel.Text" xml:space="preserve">
    <value>Nivel de notificación:</value>
  </data>
  <data name="IPAddress.HelpText" xml:space="preserve">
    <value>Dirección IP del servidor</value>
  </data>
  <data name="IPAddress.Text" xml:space="preserve">
    <value>Dirección IP:</value>
  </data>
  <data name="MachineName.HelpText" xml:space="preserve">
    <value>Nombre del servidor</value>
  </data>
  <data name="MachineName.Text" xml:space="preserve">
    <value>Nombre del servidor:</value>
  </data>
  <data name="TickCount.HelpText" xml:space="preserve">
    <value>Cantidad de tiempo que el servicio esta activo y operacional</value>
  </data>
  <data name="TickCount.Text" xml:space="preserve">
    <value>Uptime del servicio:</value>
  </data>
  <data name="WebRootPath.HelpText" xml:space="preserve">
    <value>Ruta web raiz del server</value>
  </data>
  <data name="WebRootPath.Text" xml:space="preserve">
    <value>Ruta web:</value>
  </data>
  <data name="WorkingSet.HelpText" xml:space="preserve">
    <value>Memoria asignada al servicio (in MB)</value>
  </data>
  <data name="WorkingSet.Text" xml:space="preserve">
    <value>Memoria asignada:</value>
  </data>
</root>